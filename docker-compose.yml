version: "3.8"

services:
  web:
    build: .
    container_name: fastapi_app
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - postgres
      - redis
      - rabbitmq
    env_file:
      - .env
    restart: always

  celery_worker:
    build: .
    container_name: celery_worker
    command: celery -A app.worker.celery_app.celery_app worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
      - rabbitmq
    env_file:
      - .env
    restart: always

  celery_beat:
    build: .
    container_name: celery_beat
    command: celery -A app.worker.celery_app.celery_app beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
      - rabbitmq
    env_file:
      - .env
    restart: always

  flower:
    image: mher/flower
    container_name: flower
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    depends_on:
      - rabbitmq
    env_file:
      - .env
    restart: always

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    restart: always

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

volumes:
  postgres_data:
